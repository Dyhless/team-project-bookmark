{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/slider.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/grid/grid.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","src/js/fonds-info.js","node_modules/@parcel/runtime-js/lib/runtime-39b34ee3f288a443.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-89b58349548d9517.js","node_modules/@parcel/runtime-js/lib/runtime-cfdb7360a3dece68.js","node_modules/@parcel/runtime-js/lib/runtime-5a1e025a7434b4d7.js","node_modules/@parcel/runtime-js/lib/runtime-c15e6a07804da353.js","node_modules/@parcel/runtime-js/lib/runtime-552a4bb01b29e422.js","node_modules/@parcel/runtime-js/lib/runtime-c53aea686b3b7f99.js","node_modules/@parcel/runtime-js/lib/runtime-1b2e5fdd849dd99d.js","node_modules/@parcel/runtime-js/lib/runtime-e104a288b2cfaa10.js","src/js/dark-theme.js","node_modules/@parcel/runtime-js/lib/runtime-a7b8a13da469ae8e.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\nimport Swiper, { Navigation } from 'swiper';\nimport 'swiper/swiper-bundle.css';\nimport fondsInfo from './fonds-info.js';\n\nSwiper.use([Navigation]);\n\ndocument.addEventListener('DOMContentLoaded', generateSlides);\n\n\nfunction generateSlides() {\n\n  const isMobile = window.innerWidth < 768;\n  const slidesPerView = isMobile ? 4 : 6;\n\n  let allSlides;\n\n  if (fondsInfo.length > slidesPerView * 2) {\n    allSlides = fondsInfo;\n  } else {\n    allSlides = [...fondsInfo, ...fondsInfo];\n  }\n\n  let swiper;\n\n  function updateSlider() {\n    if (swiper) {\n      swiper.update();\n    }\n  }\n\n  function handleResize() {\n    updateSlider();\n  }\n\n  const swiperOptions = {\n    direction: 'vertical',\n    loop: true,\n    slidesPerView: slidesPerView,\n    spaceBetween: 20,\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev',\n    },\n  };\n\n  swiper = new Swiper('.swiper-container', swiperOptions);\n\n  allSlides.forEach((slide, index) => {\n\n    const originalIndex = index % fondsInfo.length;\n\n    const slideHTML = `\n      <div class=\"swiper-slide\">\n        <div class=\"slide__content\">\n          <div class=\"slide__number\">${(originalIndex + 1)\n            .toString()\n            .padStart(2, '0')}</div>\n          <a href=\"${slide.url}\" class=\"slider__link\" target=\"_blank\">\n            <img\n            src=\"${slide.img}\"\n            alt=\"${slide.title}\"\n            class=\"slider__png\">\n          </a>\n        </div>\n      </div>\n    `;\n    document\n      .querySelector('.swiper-wrapper')\n      .insertAdjacentHTML('beforeend', slideHTML);\n  });\n\n  updateSlider();\n\n  window.addEventListener('resize', handleResize);\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","/**\n * Swiper 9.4.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: June 13, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex] ? slides[activeIndex].swiperSlideSize : 0;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (params.freeMode && params.freeMode.enabled && !params.cssMode) {\n      setTranslate();\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !params.centeredSlides) {\n        const slides = swiper.virtual && params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap <= 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  if (swiper.params.grid && swiper.params.grid.rows > 1) {\n    const activeColumn = activeIndex;\n    const preloadColumns = [activeColumn - amount];\n    preloadColumns.push(...Array.from({\n      length: amount\n    }).map((_, i) => {\n      return activeColumn + slidesPerView + i;\n    }));\n    swiper.slides.forEach((slideEl, i) => {\n      if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\n    });\n    return;\n  }\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind || swiper.params.loop) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(activeIndex - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && (i > slideIndexLastInView || i < activeIndex)) {\n        unlazy(swiper, i);\n      }\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && (rtl ? translate > swiper.translate && translate > swiper.minTranslate() : translate < swiper.translate && translate < swiper.minTranslate())) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = params.virtual && params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n    return;\n  }\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    if (typeof breakpointParams[prop] === 'undefined') return;\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null,\n      noMousewheelClass: 'swiper-no-mousewheel'\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n\n    // Ignore event if the target or its parents have the swiper-no-mousewheel class\n    if (event.target.closest(`.${swiper.params.mousewheel.noMousewheelClass}`)) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          } else if (swiper.isElement) {\n            bullet.setAttribute('part', 'bullet');\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (swiper.isElement) {\n          bullets.forEach((bulletEl, bulletIndex) => {\n            bulletEl.setAttribute('part', bulletIndex === current ? 'bullet-active' : 'bullet');\n          });\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          // prettier-ignore\n          paginationHTML += `<${params.bulletElement} ${swiper.isElement ? 'part=\"bullet\"' : ''} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    if (swiper.isElement) {\n      swiper.el.shadowEl.append(liveRegion);\n    } else {\n      swiper.el.append(liveRegion);\n    }\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.virtual && swiper.params.virtual.enabled ? swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`) : swiper.slides[swiper.activeIndex];\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      if (typeof newIndex === 'undefined' || Number.isNaN(newIndex)) return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.virtual && swiper.params.virtual.enabled ? swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`) : swiper.slides[swiper.activeIndex];\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    if (swiper.params.cssMode) return;\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    if (swiper.params.cssMode) return;\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    if (swiper.params.cssMode) return;\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n  const getSpaceBetween = () => {\n    let spaceBetween = swiper.params.spaceBetween;\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n    } else if (typeof spaceBetween === 'string') {\n      spaceBetween = parseFloat(spaceBetween);\n    }\n    return spaceBetween;\n  };\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n    slidesPerRow = slidesNumberEvenToRows / rows;\n  };\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup\n    } = swiper.params;\n    const spaceBetween = getSpaceBetween();\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.style.order = newSlideOrderIndex;\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.row = row;\n    slide.column = column;\n    slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n  };\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const spaceBetween = getSpaceBetween();\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    if (centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.splice(0, snapGrid.length);\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = rtl ? -swiper.translate : swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px ${rtl ? '-' : '+'} (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px ${rtl ? '-' : '+'} (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n\n      /* eslint-disable */\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rtl ? -rotate : rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      /* eslint-enable */\n\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","\nconst fondsInfo = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: new URL('../images/funds/save-children.png', import.meta.url),\n    },\n\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: new URL('../images/funds/project-hope.png', import.meta.url),\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: new URL('../images/funds/international-medical-corps.png', import.meta.url),\n  },\n\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: new URL('../images/funds/razom.png', import.meta.url),\n  },\n\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: new URL('../images/funds/action-against-hunger.png', import.meta.url),\n  },\n\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: new URL('../images/funds/sergiy-prytula.png', import.meta.url),\n  },\n\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: new URL('../images/funds/united24.png', import.meta.url),\n  },\n\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: new URL('../images/funds/medecins-sans.png', import.meta.url),\n  },\n\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: new URL('../images/funds/world-wision.png', import.meta.url),\n  }\n];\n\nexport default fondsInfo;","module.exports = require('./helpers/bundle-url').getBundleURL('01IoP') + require('./helpers/bundle-manifest').resolve(\"bMabq\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('01IoP') + require('./helpers/bundle-manifest').resolve(\"3D1R4\");","module.exports = require('./helpers/bundle-url').getBundleURL('01IoP') + require('./helpers/bundle-manifest').resolve(\"2Ryjw\");","module.exports = require('./helpers/bundle-url').getBundleURL('01IoP') + require('./helpers/bundle-manifest').resolve(\"cnC6U\");","module.exports = require('./helpers/bundle-url').getBundleURL('01IoP') + require('./helpers/bundle-manifest').resolve(\"5sIwA\");","module.exports = require('./helpers/bundle-url').getBundleURL('01IoP') + require('./helpers/bundle-manifest').resolve(\"dJc82\");","module.exports = require('./helpers/bundle-url').getBundleURL('01IoP') + require('./helpers/bundle-manifest').resolve(\"dJhF0\");","module.exports = require('./helpers/bundle-url').getBundleURL('01IoP') + require('./helpers/bundle-manifest').resolve(\"8cRtz\");","module.exports = require('./helpers/bundle-url').getBundleURL('01IoP') + require('./helpers/bundle-manifest').resolve(\"3dImx\");","const html = document.querySelector('html');\nconst themeToggle = document.querySelector('#switch');\n\n\nthemeToggle.addEventListener('change', onToggleTheme);\n\n\n// 1.При першому завантаженні сторінки перевіряє, яка тема збережена в ЛС, якщо темна, то ставить перемикач теми в \n// відповідне положення\nwindow.addEventListener('DOMContentLoaded', () => {\n  if (localStorage.getItem('theme') === 'dark') {\n    themeToggle.checked = true;\n  }\n  // сінхронізує тему, встановлену у користувача в ОС, з темою сайту, якщо в ЛС нічого не записано\n  syncThemeWithOS();\n});\n\n// Функція, яка викликається при кліку на світчер, викликає функцію додавання/видалення атрибуту темної теми\n// Якщо в ЛС записана темна тема, то її видаляємо при кліку на світчер і встановиться тема за змовченням - світла\n// Якщо нічого немає в ЛС, тоді записуємо тему темну \nfunction onToggleTheme(evt) {\n  evt.preventDefault();\n  addDarkAttribute();\n\n  if (localStorage.getItem('theme') === 'dark') {\n    localStorage.removeItem('theme');\n  } else {\n    localStorage.setItem('theme', 'dark');\n  }\n}\n\n// Додає атрибут темної теми до html\n// Якщо атрибут вже є, його видяляємо, якщо немає - додаємо\nfunction addDarkAttribute() {\n  if (html.hasAttribute('data-theme')) {\n    html.removeAttribute('data-theme');\n  } else {\n    html.setAttribute('data-theme', 'dark');\n  }\n}\n\n// Функція сінхронізації теми сайту з ЛС після перезавантаження \nfunction syncThemeWithLocalStorage() {\n  const savedTheme = localStorage.getItem('theme');\n  if (savedTheme === 'dark') {\n    addDarkAttribute();\n    themeToggle.checked = true;\n  }\n}\n\n// Функція синхронізації теми з ОС користувача з темой сайту\nfunction syncThemeWithOS() {\n  const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n  if (prefersDarkMode && !themeToggle.checked) {\n    onToggleTheme();\n  } else if (!prefersDarkMode && themeToggle.checked) {\n    onToggleTheme();\n  }\n}\n\nsyncThemeWithLocalStorage();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"01IoP\\\":\\\"shopping-list.689b99a5.js\\\",\\\"1XaNB\\\":\\\"index.a4cbcff5.css\\\",\\\"bMabq\\\":\\\"save-children.afa9e55b.png\\\",\\\"3D1R4\\\":\\\"project-hope.fbbab823.png\\\",\\\"2Ryjw\\\":\\\"international-medical-corps.453b2171.png\\\",\\\"cnC6U\\\":\\\"razom.9be8270a.png\\\",\\\"5sIwA\\\":\\\"action-against-hunger.0b9adfef.png\\\",\\\"dJc82\\\":\\\"sergiy-prytula.bf8c01ea.png\\\",\\\"dJhF0\\\":\\\"united24.c11674a2.png\\\",\\\"8cRtz\\\":\\\"medecins-sans.b35147fb.png\\\",\\\"3dImx\\\":\\\"world-wision.755735e5.png\\\"}\"));"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$8nrFW","parcelRequire","$2pSj8","default","use","$9WMMt","document","addEventListener","allSlides","swiper","slidesPerView","window","innerWidth","$ax6eO","$parcel$interopDefault","concat","updateSlider","update","swiperOptions","direction","loop","spaceBetween","navigation","nextEl","prevEl","forEach","slide","index","originalIndex","slideHTML","toString","padStart","url","img","title","querySelector","insertAdjacentHTML","defineProperty","module","exports","value","arr","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","obj","__esModule","Array","isArray","$f215c72f040a88cf$var$_arrayLikeToArray","len","arr2","iter","Symbol","iterator","from","TypeError","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","prototype","call","slice","constructor","name","test","$8MBJY","$1c280aeb2839a22d$var$prototypes","eventsEmitter","$3lgo1","$42aG2","translate","$lUFJw","transition","$59lEw","$itDrZ","$aSak5","grabCursor","$61axM","events","$lrPYL","breakpoints","$lWyhG","checkOverflow","$h5TWE","classes","$9Vwwo","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","Swiper","_len","arguments","args","_key","_modules","el","params","ref","$1EjTE","extend","$58sFY","getDocument","querySelectorAll","swipers","containerEl","newParams","push","this","__swiper__","support","$ledMJ","getSupport","device","$4rC3V","getDevice","userAgent","browser","$lhE85","getBrowser","eventsListeners","eventsAnyListeners","modules","__modules__","apply","allModulesParams","mod","extendParams","$6gDqh","on","bind","once","off","emit","swiperParams","$959nv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","activeIndex","realIndex","isBeginning","isEnd","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","Math","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","key","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndex","filter","getAttribute","setGrabCursor","unsetGrabCursor","speed","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","_emitClasses","cls","className","split","indexOf","containerModifierClass","join","destroyed","updates","getSlideClasses","view","exact","swiperSize","size","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i1","i2","slideInView","i3","slideInView1","translated","setBreakpoint","imageEl","complete","$7eaCI","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","cssMode","setTranslate","autoHeight","updateAutoHeight","virtual","slideTo","watchOverflow","translateValue","rtlTranslate","newTranslate","newDirection","needUpdate","currentDirection","classList","remove","add","emitContainerClasses","style","width","height","rtl","dir","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","mount","addClasses","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","e","target","preload","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","newDefaults","m","installModule","prototypeGroup","protoMethod","$hoK65","$5NIfu","$1c280aeb2839a22d$export$2e2bcd8739ae039","instance","Constructor","$74e7f8130373505f$var$_defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","$3bd3f193ccd5630c$var$isObject","$3bd3f193ccd5630c$export$8b58be045bf06082","src","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","body","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","$hKHmD","$1338f5f0d60fe216$export$8694e5c03a4df8e6","object","e1","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","now","$1338f5f0d60fe216$export$3735103072e4a80","getWindow","currentStyle","$1338f5f0d60fe216$export$5ec402b7fcf74398","matrix","curTransform","transformMatrix","axis","curStyle","WebKitCSSMatrix","transform","webkitTransform","map","a","replace","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","$1338f5f0d60fe216$var$isNode","node","HTMLElement","nodeType","$1338f5f0d60fe216$export$8b58be045bf06082","nextSource","keysArray","noExtend","nextIndex","nextKey","desc","getOwnPropertyDescriptor","to","_loop","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","param","time","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$1338f5f0d60fe216$export$616841b86f802685","$1338f5f0d60fe216$export$eb846d859f2895e6","selector","matches","$1338f5f0d60fe216$export$c8a8987d4410bf2d","tag","_classList","$1338f5f0d60fe216$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$1338f5f0d60fe216$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$1338f5f0d60fe216$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$1338f5f0d60fe216$export$4184470d4bd0f986","prop","$1338f5f0d60fe216$export$371885c503a01623","child","previousSibling","$1338f5f0d60fe216$export$aedc7b608ca8e855","parents","parent","parentElement","$1338f5f0d60fe216$export$6b974c5889da0bb5","fireCallBack","$1338f5f0d60fe216$export$863f37913038cf77","includeMargins","offsetWidth","$f745992e8d1b1180$var$support","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$f745992e8d1b1180$var$calcSupport","$33c7356d035118c5$var$deviceCached","$33c7356d035118c5$var$calcDevice","platform","ua","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","iPadScreens","os","$33c7356d035118c5$export$30c823bc834d6ab4","overrides","$f7ea505fdac53fb2$var$browser","$1t1Wn","$f7ea505fdac53fb2$export$89e15fc796a4a429","needPerspectiveFix","isSafari","ua1","String","includes","num","Number","major","minor","isWebView","$f7ea505fdac53fb2$var$calcBrowser","$caa86f81f75e9730$export$2e2bcd8739ae039","param1","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$4393da3adccaa7db$export$2e2bcd8739ae039","observers","attach","options","ObserverFunc","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$26f00b4681ced12e$export$2e2bcd8739ae039","handler","priority","self","method","event","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","eventsArray","$gXfEI","$2effa18fdcd4ebca$export$2e2bcd8739ae039","$fdMLQ","$56ZNO","updateSlidesOffset","$hIP6N","updateSlidesProgress","$dW6z4","$5P2Nk","$1kvfj","$KG4bf","updateClickedSlide","$9VeMF","$c57e4cf0a3cc0e9b$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","isNaN","$b14de6c650ce395b$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","key1","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesSize1","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","backFaceHiddenClass","hasClassBackfaceClassAdded","contains","maxBackfaceHiddenSlides","$3b8d73f2acfa0ea0$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","index1","offsetHeight","$ce6e30db971b8f6a$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$a255c8b825922753$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","isVisible","originalProgress","$43d3e22542fd4c38$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","$0f7fe5860e74601f$export$2e2bcd8739ae039","activeSlide","getFilteredSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","emitSlidesClasses","$08c4ed821325a44e$export$2e2bcd8739ae039","newActiveIndex","realIndex1","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$08c4ed821325a44e$export$81ecffcda7ad6ebb","skip","$543214d309191af3$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$543214d309191af3$var$unlazy","$543214d309191af3$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slidesPerViewDynamic","_preloadColumns","activeColumn","preloadColumns","column","slideIndexLastInView","rewind","$7394e7bbbcd710e0$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1vNo4","$ff3f3346f9416381$export$2e2bcd8739ae039","getTranslate","$kCYKF","$7THKu","$dzDR0","$dVcfr","$119efefc5c17e954$export$2e2bcd8739ae039","virtualTranslate","$f0467b48c9fa9010$export$2e2bcd8739ae039","byController","x","y","$5bff9b105f3a15ca$export$2e2bcd8739ae039","$9e1d7562301634ad$export$2e2bcd8739ae039","$a22a1974ce4a087e$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","_obj","onTranslateToWrapperTransitionEnd","$kR0Vg","$3bfe96c57afe6ca0$export$2e2bcd8739ae039","transitionStart","$488q8","transitionEnd","$99Zle","$f2e9791e5099a2fd$export$2e2bcd8739ae039","transitionDuration","$4aOW6","$301e70f0ee5514cd$export$2e2bcd8739ae039","step","$309f9b76d4fd47ea$export$2e2bcd8739ae039","$6ab48978240ea54a$export$2e2bcd8739ae039","$OZIeq","$d7398976190fd90b$export$2e2bcd8739ae039","slideToLoop","$cGTS6","slideNext","$7Y909","slidePrev","$3B7dt","slideReset","$dhKLJ","slideToClosest","$fn7l8","$hk5na","$09948a6d2dc2571f$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$93d4bf3a931cd83e$export$2e2bcd8739ae039","indexAsNumber","newIndex","$5cd51e7a21111153$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$29ea6cd54fa440bc$export$2e2bcd8739ae039","normalize","val","prevSnapIndex","normalizedSnapGrid","prevSnap","prevIndex","lastIndex","$9ac1243abd623ac0$export$2e2bcd8739ae039","$b30eb28584e91039$export$2e2bcd8739ae039","threshold","currentSnap","nextSnap","currentSnap1","$c9c878d368de6346$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$3Gh7G","$7ea6f47a36945eb6$export$2e2bcd8739ae039","$7AnfI","$5gsL1","$2ae2939469a141d4$export$2e2bcd8739ae039","slideRealIndex","$585deea5b955cef7$export$2e2bcd8739ae039","_slideTo","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","swiperLoopMoveDOM","prepend","recalcSlides","currentSlideTranslate","newSlideTranslate","currentSlideTranslate1","newSlideTranslate1","diff1","controller","control","loopParams","c","$3d54c101ba970f47$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$3mSh2","$012177cdd3ce0659$export$2e2bcd8739ae039","$aozqy","$273d86d6596c268d$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$7917a06587c5c882$export$2e2bcd8739ae039","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$kXZZT","onLoad","$f9d4708c1dfbfc0b$export$2e2bcd8739ae039","$97DRT","$ex2Z8","$1OTa3","$19FtL","$35dR0","$1jcRQ","$6a43b17d59f348c6$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","__closestFrom","assignedSlot","found","getRootNode","$6a43b17d59f348c6$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$02baf1653270db8e$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","pow","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","loopFixed","isLoop","evt","bubbles","dispatchEvent","disableParentSwiper","resistanceRatio","resistance","followFinger","$15353fd53fa0afb1$export$2e2bcd8739ae039","type","currentPos","touchEndTime","timeDiff","pathTree","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","increment1","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","$f43968ae768025a8$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$23ec95d99b99a94a$export$2e2bcd8739ae039","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","$0f418bff419545b4$export$2e2bcd8739ae039","$bGu4B","$ff999bdc5ea561ff$export$2e2bcd8739ae039","getBreakpoint","$7ogML","$881af1db6e44c2b5$var$isGridEnabled","$881af1db6e44c2b5$export$2e2bcd8739ae039","breakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","$5617cb898a0f8fe0$export$2e2bcd8739ae039","base","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","_i","point1","value1","$g0Bml","$73a2aa00ea89ae97$export$2e2bcd8739ae039","$8Ubu7","$ba79a0353521e453$export$2e2bcd8739ae039","_classNames","prefix","resultClasses","suffixes","autoheight","centered","item","$67bc7655f50fd7fe$export$2e2bcd8739ae039","$c71e4cd26750bb38$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$69cbdaf801d551aa$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$4902d140bb7ee8d5$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$73df5eb817a37a3a$export$2e2bcd8739ae039","hideOnClick","disabledClass","hiddenClass","lockClass","navigationDisabledClass","makeElementsArray","getEl","res","toggleEl","disabled","subEl","tagName","_navigation","onPrevClick","onNextClick","$kYZkc","initButton","destroy","destroyButton","_s","pagination","clickable","isHidden","toggle","$f468fb17181f9684$export$2e2bcd8739ae039","checkProps","$73166865f7b54cd7$export$2e2bcd8739ae039","$f4c91b3b7f316ab7$export$2e2bcd8739ae039","appendElement","tempDOM","innerHTML","$2813cfd83c41305e$export$2e2bcd8739ae039","prependElement","$18636735d4558718$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$716dd64e8af94877$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$09cd9ab98ba19d8c$export$2e2bcd8739ae039","removeSlide","$972bb72b4792baa3$export$2e2bcd8739ae039","requireUpdateOnVirtual","overwriteParams","perspective","recreateShadows","getEffectParams","overwriteParamsResult","slideShadows","$a3fe64242580cf29$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$32bf8419d687a016$export$2e2bcd8739ae039","transformElements","eventTriggered","parentNode","getSlide","elementTransitionEnd","$aa588c71d5569b8d$export$2e2bcd8739ae039","shadowClass","shadowContainer","$7ab1d32627bf8b8a$export$2e2bcd8739ae039","URL","getBundleURL","resolve","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","err","stack","$7dd1ddf6834435ca$var$getBundleURL","$2381388f86a3d3bd$var$html","$2381388f86a3d3bd$var$themeToggle","$2381388f86a3d3bd$var$onToggleTheme","$2381388f86a3d3bd$var$addDarkAttribute","localStorage","getItem","removeItem","setItem","hasAttribute","prefersDarkMode","checked","register","JSON","parse"],"version":3,"file":"shopping-list.689b99a5.js.map"}